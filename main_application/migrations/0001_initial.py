# Generated by Django 5.2.4 on 2025-10-04 09:57

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bid_number', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('bid_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('technical_proposal', models.TextField()),
                ('financial_proposal', models.TextField()),
                ('delivery_timeline_days', models.PositiveIntegerField()),
                ('bid_security_reference', models.CharField(blank=True, max_length=100)),
                ('bid_security_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected'), ('awarded', 'Awarded'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('technical_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('financial_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('evaluator_comments', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('organization_type', models.CharField(choices=[('government', 'Government'), ('private', 'Private Company'), ('construction', 'Construction Company'), ('military', 'Military/Defense'), ('education', 'Educational Institution'), ('healthcare', 'Healthcare'), ('ngo', 'NGO/Non-Profit'), ('parastatal', 'Parastatal'), ('municipality', 'Municipality'), ('other', 'Other')], max_length=50)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('tax_id', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, upload_to='organizations/logos/')),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BidDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('technical_proposal', 'Technical Proposal'), ('financial_proposal', 'Financial Proposal'), ('company_profile', 'Company Profile'), ('registration_cert', 'Registration Certificate'), ('tax_clearance', 'Tax Clearance'), ('financial_statements', 'Financial Statements'), ('experience_cert', 'Experience Certificates'), ('bid_security', 'Bid Security'), ('power_attorney', 'Power of Attorney'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=300)),
                ('file', models.FileField(upload_to='bid_documents/')),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='main_application.bid')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_number', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('contract_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('duration_days', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('suspended', 'Suspended'), ('completed', 'Completed'), ('terminated', 'Terminated')], default='draft', max_length=20)),
                ('terms_and_conditions', models.TextField()),
                ('performance_bond_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('retention_percentage', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('signed_contract', models.FileField(blank=True, upload_to='contracts/')),
                ('signed_by_organization', models.BooleanField(default=False)),
                ('signed_by_vendor', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('winning_bid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='main_application.bid')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('tender_published', 'Tender Published'), ('tender_closing', 'Tender Closing Soon'), ('bid_submitted', 'Bid Submitted'), ('bid_status_change', 'Bid Status Changed'), ('clarification_answered', 'Clarification Answered'), ('amendment_published', 'Amendment Published'), ('contract_awarded', 'Contract Awarded'), ('milestone_due', 'Milestone Due'), ('payment_released', 'Payment Released')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('link', models.CharField(blank=True, max_length=500)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quality_rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('timeliness_rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('professionalism_rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('overall_rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('comment', models.TextField()),
                ('would_work_again', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='main_application.contract')),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tender_number', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('detailed_requirements', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('ongoing', 'Ongoing'), ('closed', 'Closed'), ('awarded', 'Awarded'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('procurement_method', models.CharField(choices=[('open', 'Open Tender'), ('restricted', 'Restricted Tender'), ('negotiated', 'Negotiated Procedure'), ('framework', 'Framework Agreement'), ('competitive_dialogue', 'Competitive Dialogue'), ('request_quotation', 'Request for Quotation')], max_length=50)),
                ('estimated_value', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('bid_security_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('publication_date', models.DateTimeField()),
                ('submission_deadline', models.DateTimeField()),
                ('opening_date', models.DateTimeField()),
                ('expected_award_date', models.DateField(blank=True, null=True)),
                ('contract_duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('project_location', models.CharField(max_length=255)),
                ('project_city', models.CharField(max_length=100)),
                ('project_country', models.CharField(max_length=100)),
                ('eligible_countries', models.TextField(help_text='Comma-separated country codes')),
                ('minimum_experience_years', models.PositiveIntegerField(default=0)),
                ('minimum_turnover', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('requires_prequalification', models.BooleanField(default=False)),
                ('contact_person', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tenders', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenders', to='main_application.organization')),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('evaluation_date', models.DateTimeField(auto_now_add=True)),
                ('technical_criteria', models.JSONField()),
                ('financial_criteria', models.JSONField()),
                ('notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='main_application.tender')),
            ],
            options={
                'ordering': ['-evaluation_date'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='tender',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='main_application.tender'),
        ),
        migrations.AddField(
            model_name='bid',
            name='tender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='main_application.tender'),
        ),
        migrations.CreateModel(
            name='TenderAmendment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amendment_number', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=300)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('affects_submission_deadline', models.BooleanField(default=False)),
                ('new_submission_deadline', models.DateTimeField(blank=True, null=True)),
                ('affects_estimated_value', models.BooleanField(default=False)),
                ('new_estimated_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('document', models.FileField(blank=True, upload_to='amendments/')),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amendments', to='main_application.tender')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='TenderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='main_application.tendercategory')),
            ],
            options={
                'verbose_name_plural': 'Tender Categories',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='tender',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenders', to='main_application.tendercategory'),
        ),
        migrations.CreateModel(
            name='TenderDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('tender_notice', 'Tender Notice'), ('technical_specs', 'Technical Specifications'), ('bill_quantities', 'Bill of Quantities'), ('drawings', 'Drawings/Plans'), ('terms_conditions', 'Terms and Conditions'), ('contract_template', 'Contract Template'), ('prequalification', 'Prequalification Document'), ('addendum', 'Addendum'), ('other', 'Other')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=300)),
                ('file', models.FileField(upload_to='tender_documents/')),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('description', models.TextField(blank=True)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='main_application.tender')),
            ],
            options={
                'ordering': ['document_type', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('business_type', models.CharField(choices=[('sole_proprietor', 'Sole Proprietorship'), ('partnership', 'Partnership'), ('llc', 'Limited Liability Company'), ('corporation', 'Corporation'), ('cooperative', 'Cooperative')], max_length=50)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('tax_id', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('year_established', models.PositiveIntegerField()),
                ('number_of_employees', models.PositiveIntegerField()),
                ('annual_turnover', models.DecimalField(decimal_places=2, max_digits=15)),
                ('service_areas', models.TextField(help_text='Countries/regions where vendor operates')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('verification_documents', models.FileField(blank=True, upload_to='vendor_documents/')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='vendors', to='main_application.tendercategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='main_application.vendor'),
        ),
        migrations.CreateModel(
            name='Clarification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('is_answered', models.BooleanField(default=False)),
                ('asked_at', models.DateTimeField(auto_now_add=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clarifications', to='main_application.tender')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clarifications', to='main_application.vendor')),
            ],
            options={
                'ordering': ['-asked_at'],
            },
        ),
        migrations.AddField(
            model_name='bid',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='main_application.vendor'),
        ),
        migrations.CreateModel(
            name='BidEvaluation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('technical_scores', models.JSONField()),
                ('financial_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('remarks', models.TextField(blank=True)),
                ('recommendation', models.CharField(choices=[('recommend', 'Recommend'), ('conditional', 'Conditional'), ('not_recommend', 'Not Recommended')], max_length=50)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='main_application.bid')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bid_evaluations', to='main_application.evaluation')),
            ],
            options={
                'ordering': ['-total_score'],
                'unique_together': {('evaluation', 'bid')},
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=300)),
                ('description', models.TextField()),
                ('sequence_number', models.PositiveIntegerField()),
                ('deliverables', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('percentage_of_total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('due_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('verified', 'Verified'), ('paid', 'Paid'), ('delayed', 'Delayed')], default='pending', max_length=20)),
                ('verification_document', models.FileField(blank=True, upload_to='milestone_verifications/')),
                ('payment_receipt', models.FileField(blank=True, upload_to='payment_receipts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='main_application.contract')),
            ],
            options={
                'ordering': ['contract', 'sequence_number'],
                'unique_together': {('contract', 'sequence_number')},
            },
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['status', 'submission_deadline'], name='main_applic_status_64751e_idx'),
        ),
        migrations.AddIndex(
            model_name='tender',
            index=models.Index(fields=['category', 'status'], name='main_applic_categor_5e1950_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together={('tender', 'vendor')},
        ),
    ]
